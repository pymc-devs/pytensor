name: PyPI
on:
  push:
    branches:
      - main
      - auto-release
  pull_request:
    branches: [main]
  release:
    types: [published]

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  # The job to build pypi wheels users can installed precompiled for them.
  # At the moment only linux wheels are build, Windows and MacOS will compile on installation
  # Before prebuilds all users had to compile code anyway.
  build:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build the sdist and the wheel
        run: |
          pip install build
          python -m build
      - name: Check the sdist installs and imports
        run: |
          mkdir -p test-sdist
          cd test-sdist
          python -m venv venv-sdist
          venv-sdist/bin/python -m pip install ../dist/pytensor-*.tar.gz
          # check import
          venv-sdist/bin/python -c "import pytensor;print(pytensor.__version__)"
          # check import cython module
          venv-sdist/bin/python -c 'from pytensor.scan import scan_perform; print(scan_perform.get_version())'
      - name: Check the bdist installs and imports
        run: |
          mkdir -p test-bdist
          cd test-bdist
          python -m venv venv-bdist
          venv-bdist/bin/python -m pip install ../dist/pytensor-*.whl
          # check import
          venv-bdist/bin/python -c "import pytensor;print(pytensor.__version__)"
          # check import cython module
          venv-bdist/bin/python -c 'from pytensor.scan import scan_perform; print(scan_perform.get_version())'
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*

  upload_pypi:
    name: Upload to PyPI on release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.pypi_secret }}
